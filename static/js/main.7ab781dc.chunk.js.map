{"version":3,"sources":["components/Act.tsx","components/Play.tsx","components/Personae.tsx","utils/parser.js","utils/animate.ts","utils/utils.ts","components/Persona.tsx","components/PersonaGroup.tsx","components/Text.tsx","components/Title.tsx","components/Scene.tsx","components/Speech.tsx","components/Icon.tsx","components/Player.tsx","components/Menu.tsx","components/StyledLink.tsx","components/PlayViewer.tsx","components/Loading.tsx","index.tsx","themes/index.ts"],"names":["ActWrapper","styled","div","props","borderColor","theme","css","Act","childNodes","map","child","index","nodeName","text","size","PlayWrapper","TitleWrapper","background","boxShadow","Play","Helmet","Personae","name","xmlParser","obj","dom","children","toLowerCase","length","forEach","push","innerHTML","replace","fadeInAnimation","keyframes","quillAnimation","lineAnimation","getSafeName","split","PersonaWrapper","SketchPickerWrapper","PersonaTitleWrapper","ButtonWrapper","button","Persona","useState","safeNameColor","setSafeNameColor","isColorPickerVisible","setIsColorPickerVisible","useEffect","safeName","localStorage","getItem","randomColor","color","i","Math","floor","random","getRandomColor","setItem","handleEsc","e","key","document","addEventListener","removeEventListener","handleToggleColorPicker","style","onClick","icon","onChange","hex","onChangeComplete","PersonaGroup","TextWrapper","Text","span","headerFont","Title","toUpperCase","SceneWrapper","StageDirWrapper","Scene","SpeechWrapper","Speech","library","add","faChevronUp","faChevronDown","faChevronLeft","faChevronRight","faTimes","faBars","faFeatherAlt","faPlay","IconWrapper","isCentre","paddingSize","padding","Icon","prefix","fixedWidth","PlayerWrapper","ControlWrapper","YoutubeWrapper","Player","youtubeId","player","setPlayer","videoId","opts","height","width","playerVars","controls","autoplay","playsinline","onReady","event","target","playVideo","console","log","getCurrentTime","getDuration","Partition","ShakespeareImage","img","MenuLinkWrapper","isActive","Menu","menuContent","setMenuContent","fetch","process","headers","Accept","then","response","json","menu","Object","keys","value","menuItem","title","plays","play","id","to","src","alt","StyledLinkWrapper","linkProps","asButton","isBlock","isHoverOpacityDisabled","gradientToColor","gradientFromColor","borderRadius","StyledLink","stopPropagation","isShadow","PlayViewerWrapper","BackgroundImage","PlayViewer","playId","useParams","setPlay","playContent","setPlayContent","axios","get","xml","DOMParser","parseFromString","data","youtube","LoadingWrapper","LoadingText","QuillWrapper","LineWrapper","Loading","ReactDOM","render","copyFont","imageWidth","menuHeight","menuWidth","Mesh","sliceRatio","ambient","diffuse","Lights","zOffset","spotlights","path","getElementById"],"mappings":"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","file":"static/js/main.7ab781dc.chunk.js","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport { NodeProps } from 'types'\nimport { Title, Scene } from 'components'\n\n/*\n * Styled Components\n */\nconst ActWrapper = styled.div((props) => {\n  const {\n    theme: { borderColor }\n  } = props\n\n  return css`\n    padding-top: 2rem;\n    border-top: 1px solid ${borderColor};\n    margin-top: 2rem;\n  `\n})\n\n/*\n * Component\n */\nexport const Act = (props: NodeProps) => {\n  const { childNodes } = props\n\n  return (\n    <ActWrapper>\n      {childNodes &&\n        childNodes.map((child, index) => {\n          const { nodeName, childNodes, text } = child\n\n          switch (nodeName) {\n            case 'title':\n              return (\n                text && (\n                  <Title\n                    key={`act-title-${index}`}\n                    text={text}\n                    size=\"medium\"\n                  />\n                )\n              )\n\n            case 'scene':\n              return (\n                <Scene\n                  key={`act-scene-${index}`}\n                  nodeName={nodeName}\n                  childNodes={childNodes}\n                />\n              )\n\n            default:\n              break\n          }\n        })}\n    </ActWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport { Helmet } from 'react-helmet'\nimport { NodeProps } from 'types'\nimport { Title, Personae, Text, Act } from 'components'\n\n/*\n * Styled Components\n */\nconst PlayWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 500px;\n  margin-top: 80px;\n`\n\nconst TitleWrapper = styled.div((props) => {\n  const {\n    theme: { background, boxShadow }\n  } = props\n\n  return css`\n    position: fixed;\n    width: 100%;\n    top: 0;\n    padding: 1rem;\n    background: ${background};\n    box-shadow: ${boxShadow};\n  `\n})\n\n/*\n * Component\n */\nexport const Play = (props: NodeProps) => {\n  const { childNodes } = props\n\n  return (\n    <PlayWrapper>\n      {childNodes &&\n        childNodes.map((child, index) => {\n          const { nodeName, childNodes, text } = child\n\n          switch (nodeName) {\n            case 'title':\n              return (\n                text && (\n                  <TitleWrapper key={`play-title-${index}`}>\n                    <Helmet>\n                      <title>{text}</title>\n                    </Helmet>\n                    <Title text={text} size=\"large\" />\n                  </TitleWrapper>\n                )\n              )\n\n            case 'personae':\n              return (\n                <Personae\n                  key={`play-personae-${index}`}\n                  nodeName={nodeName}\n                  childNodes={childNodes}\n                />\n              )\n\n            case 'scndescr':\n              return (\n                text && (\n                  <Text key={`play-scndescr-${index}`} text={text} />\n                )\n              )\n\n            case 'act':\n              return (\n                <Act\n                  key={`play-act-${index}`}\n                  nodeName={nodeName}\n                  childNodes={childNodes}\n                />\n              )\n            default:\n              break\n          }\n        })}\n    </PlayWrapper>\n  )\n}\n","import React from 'react'\nimport { NodeProps } from 'types'\nimport { Title, Text, Persona, PersonaGroup } from 'components'\n\n/*\n * Component\n */\nexport const Personae = (props: NodeProps) => {\n  const { childNodes } = props\n\n  return (\n    <>\n      {childNodes &&\n        childNodes.map((child, index) => {\n          const { nodeName, childNodes, text } = child\n\n          switch (nodeName) {\n            case 'title':\n              return (\n                text && (\n                  <Title\n                    key={`personae-title-${index}`}\n                    text={text}\n                    size=\"medium\"\n                  />\n                )\n              )\n\n            case 'persona':\n              return (\n                text && (\n                  <Persona key={`persona-${index}`} name={text} />\n                )\n              )\n\n            case 'grpdescr':\n              return (\n                text && (\n                  <Text\n                    key={`persona-grpdescr-${index}`}\n                    text={text}\n                  />\n                )\n              )\n\n            case 'pgroup':\n              return (\n                <PersonaGroup\n                  key={`persona-group-${index}`}\n                  nodeName={nodeName}\n                  childNodes={childNodes}\n                />\n              )\n\n            default:\n              break\n          }\n        })}\n    </>\n  )\n}\n","const etcFormatter = (text) => text.replace('&amp;c.', 'etc.')\n\nexport const xmlParser = (obj) => {\n  const { dom, childNodes = [] } = obj\n\n  let children = [...dom.children]\n  const nodeName = dom.nodeName.toLowerCase()\n\n  if (!children.length)\n    return { nodeName, text: etcFormatter(dom.innerHTML) }\n\n  children.forEach((child) => {\n    childNodes.push(xmlParser({ dom: child, childNodes: [] }))\n  })\n\n  return { nodeName, childNodes }\n}\n","import { keyframes } from 'styled-components/macro'\n\n/*\n * Fade Animation\n */\nexport const fadeInAnimation = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`\n\nexport const quillAnimation = keyframes`\n  0% {\n    transform: translateX(-20px) rotate(-10deg);\n    opacity: 0;\n  }\n  10% {\n    opacity: 1;\n  }\n\n  25% {\n    transform:  translateX(-10px) rotate(10deg);\n  }\n\n  50% {\n    transform: translateX(0) rotate(-10deg);\n  }\n\n  75% {\n    transform: translateX(10px) rotate(10deg); \n  }\n\n  90% {\n    opacity: 1;\n  }\n  100% {\n    transform: translateX(20px) rotate(-10deg);\n    opacity: 0;\n  }\n`\n\nexport const lineAnimation = keyframes`\n  0% {\n    transform: translateX(0);\n    \n  }\n\n  10% {\n    \n  }\n\n  25% {\n    transform: translateX(5px);\n  }\n\n  50% {\n    transform: translateX(15px);\n  }\n\n  75% {\n    transform: translateX(25px);\n  }\n\n  90% {\n    \n  }\n\n  100% {\n    transform: translateX(30px);\n    \n  }\n`\n","export const getRandomColor = () => {\n  const letters = '0123456789ABCDEF'\n  let color = '#'\n\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)]\n  }\n\n  return color\n}\n\nexport const getSafeName = (name: string): string =>\n  name\n    .split(' ')[0]\n    .replace(/[\\p{P}$+<=>^`|~]/gu, '')\n    .toLowerCase()\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components/macro'\nimport { SketchPicker, ColorResult } from 'react-color'\nimport { Icon } from 'components'\nimport { getRandomColor, getSafeName, fadeInAnimation } from 'utils'\n\ninterface Props {\n  name: string\n}\n\n/*\n * Styled Components\n */\nconst PersonaWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 0.5rem;\n`\n\nconst SketchPickerWrapper = styled.div`\n  position: relative;\n  padding: 2rem;\n  opacity: 0;\n  animation: ${fadeInAnimation} forwards 0.4s;\n`\n\nconst PersonaTitleWrapper = styled.div`\n  cursor: pointer;\n`\n\nconst ButtonWrapper = styled.button`\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  border: none;\n  background: transparent;\n  outline: none;\n  cursor: pointer;\n`\n\n/*\n * Component\n */\nexport const Persona = (props: Props) => {\n  const { name } = props\n\n  /*\n   * State\n   */\n  const [safeNameColor, setSafeNameColor] = useState<string>()\n  const [\n    isColorPickerVisible,\n    setIsColorPickerVisible\n  ] = useState<boolean>()\n\n  /*\n   * React Hooks\n   */\n  useEffect(() => {\n    const safeName = getSafeName(name)\n    const safeNameColor = localStorage.getItem(safeName)\n\n    if (!safeNameColor) {\n      const randomColor = getRandomColor()\n\n      localStorage.setItem(safeName, randomColor)\n\n      setSafeNameColor(randomColor)\n    } else {\n      setSafeNameColor(safeNameColor)\n    }\n  }, [])\n\n  useEffect(() => {\n    const handleEsc = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') setIsColorPickerVisible(false)\n    }\n\n    document.addEventListener('keyup', handleEsc)\n\n    return () => {\n      document.removeEventListener('keyup', handleEsc)\n    }\n  }, [])\n\n  /*\n   * Event Handlers\n   */\n  const handleToggleColorPicker = () =>\n    setIsColorPickerVisible(!isColorPickerVisible)\n\n  const handleColorChange = (color: ColorResult) => {\n    const { hex } = color\n\n    setSafeNameColor(hex)\n  }\n\n  const handleChangeComplete = () => {\n    const safeName = getSafeName(name)\n\n    safeNameColor && localStorage.setItem(safeName, safeNameColor)\n  }\n\n  const style = {\n    color: safeNameColor\n  }\n\n  return (\n    <PersonaWrapper>\n      <PersonaTitleWrapper\n        style={style}\n        onClick={handleToggleColorPicker}\n      >\n        {name}\n      </PersonaTitleWrapper>\n      {isColorPickerVisible && (\n        <SketchPickerWrapper>\n          <ButtonWrapper onClick={handleToggleColorPicker}>\n            <Icon icon=\"times\" />\n          </ButtonWrapper>\n          <SketchPicker\n            color={safeNameColor}\n            onChange={handleColorChange}\n            onChangeComplete={handleChangeComplete}\n          />\n        </SketchPickerWrapper>\n      )}\n    </PersonaWrapper>\n  )\n}\n","import React from 'react'\nimport { NodeProps } from 'types'\nimport { Text, Persona } from 'components'\n\n/*\n * Component\n */\nexport const PersonaGroup = (props: NodeProps) => {\n  const { childNodes } = props\n\n  return (\n    <>\n      {childNodes &&\n        childNodes.map((child, index) => {\n          const { nodeName, text } = child\n\n          switch (nodeName) {\n            case 'persona':\n              return (\n                text && (\n                  <Persona\n                    key={`persona-group-${index}`}\n                    name={text}\n                  />\n                )\n              )\n            case 'grpdescr':\n              return (\n                text && (\n                  <Text\n                    key={`persona-group-grpdescr-${index}`}\n                    text={text}\n                  />\n                )\n              )\n            default:\n              break\n          }\n        })}\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ninterface Props {\n  text: string\n}\n\n/*\n * Styled Components\n */\nconst TextWrapper = styled.div``\n\n/*\n * Component\n */\nexport const Text = (props: Props) => {\n  const { text } = props\n\n  return <TextWrapper>{text}</TextWrapper>\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components/macro'\n\ntype TitleSize = 'large' | 'medium' | 'small' | 'extra-small'\n\ninterface Props {\n  text: string\n  size?: TitleSize\n  color?: string\n}\n\n/*\n * Styled Components\n */\nconst TitleWrapper = styled.span<{ size: TitleSize; color?: string }>(\n  (props) => {\n    const {\n      size,\n      color,\n      theme: { headerFont }\n    } = props\n\n    return css`\n      font-family: ${headerFont};\n      display: block;\n\n      ${size === 'large' &&\n      css`\n        font-size: 2rem;\n      `}\n\n      ${size === 'medium' &&\n      css`\n        font-size: 1.5rem;\n        margin-bottom: 1rem;\n      `}\n      \n      ${size === 'small' &&\n      css`\n        font-size: 1.2rem;\n        margin-bottom: 0.5rem;\n      `}\n      \n      ${size === 'extra-small' &&\n      css`\n        font-size: 1rem;\n      `}\n\n    ${color &&\n      css`\n        color: ${color};\n      `}\n    `\n  }\n)\n\n/*\n * Component\n */\nexport const Title = (props: Props) => {\n  const { text, size = 'medium', color } = props\n\n  return (\n    <TitleWrapper size={size} color={color}>\n      {text.toUpperCase()}\n    </TitleWrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport { NodeProps } from 'types'\nimport { Speech, Text, Title } from 'components'\n\n/*\n * Styled Components\n */\nconst SceneWrapper = styled.div`\n  margin-top: 2rem;\n`\n\nconst StageDirWrapper = styled.div`\n  margin-top: 1rem;\n`\n\n/*\n * Component\n */\nexport const Scene = (props: NodeProps) => {\n  const { childNodes } = props\n\n  return (\n    <SceneWrapper>\n      {childNodes &&\n        childNodes.map((child, index) => {\n          const { nodeName, childNodes, text } = child\n\n          switch (nodeName) {\n            case 'title':\n              return (\n                text && (\n                  <Text key={`scene-title-${index}`} text={text} />\n                )\n              )\n\n            case 'stagedir':\n              return (\n                text && (\n                  <StageDirWrapper key={`scene-stagedir-${index}`}>\n                    <Title text={text} size=\"extra-small\" />\n                  </StageDirWrapper>\n                )\n              )\n\n            case 'speech':\n              return (\n                <Speech\n                  key={`scene-speech-${index}`}\n                  nodeName={nodeName}\n                  childNodes={childNodes}\n                />\n              )\n\n            default:\n              break\n          }\n        })}\n    </SceneWrapper>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components/macro'\nimport { NodeProps } from 'types'\nimport { Text, Title } from 'components'\nimport { getSafeName } from 'utils'\n\n/*\n * Styled Components\n */\nconst SpeechWrapper = styled.div`\n  margin-top: 2rem;\n`\n\nconst StageDirWrapper = styled.div`\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`\n\n/*\n * Component\n */\nexport const Speech = (props: NodeProps) => {\n  const { childNodes } = props\n\n  const [safeNameColor, setSafeNameColor] = useState<string>('#000')\n\n  return (\n    <SpeechWrapper>\n      {childNodes &&\n        childNodes.map((child, index) => {\n          const { nodeName, text } = child\n\n          switch (nodeName) {\n            case 'speaker':\n              useEffect(() => {\n                if (text) {\n                  const safeName = getSafeName(text)\n                  const safeNameColor = localStorage.getItem(safeName)\n\n                  safeNameColor && setSafeNameColor(safeNameColor)\n                }\n              }, [])\n\n              return (\n                text && (\n                  <Title\n                    key={`speech-speaker-${index}`}\n                    text={text}\n                    color={safeNameColor}\n                    size=\"small\"\n                  />\n                )\n              )\n\n            case 'line':\n              return (\n                text && (\n                  <Text key={`speech-speaker-${index}`} text={text} />\n                )\n              )\n\n            case 'stagedir':\n              return (\n                text && (\n                  <StageDirWrapper key={`speech-stagedir-${index}`}>\n                    <Title text={text} size=\"extra-small\" />\n                  </StageDirWrapper>\n                )\n              )\n\n            default:\n              break\n          }\n        })}\n    </SpeechWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  library,\n  IconPrefix,\n  SizeProp\n} from '@fortawesome/fontawesome-svg-core'\nimport { IconPaddingOptions } from 'types'\n\nimport {\n  faTimes,\n  faBars,\n  faChevronUp,\n  faChevronDown,\n  faChevronLeft,\n  faChevronRight,\n  faFeatherAlt,\n  faPlay\n} from '@fortawesome/free-solid-svg-icons'\n\nexport type IconName =\n  | 'times'\n  | 'bars'\n  | 'chevron-up'\n  | 'chevron-down'\n  | 'chevron-left'\n  | 'chevron-right'\n  | 'feather-alt'\n  | 'play'\n\ninterface Props {\n  icon?: IconName\n  padding?: IconPaddingOptions\n  isCentre?: boolean\n  isSpinning?: boolean\n  prefix?: string\n  size?: SizeProp\n  isShadow?: boolean\n}\n\nlibrary.add(\n  faChevronUp,\n  faChevronDown,\n  faChevronLeft,\n  faChevronRight,\n  faTimes,\n  faBars,\n  faFeatherAlt,\n  faPlay\n)\n\n/*\n * Styled Components\n */\nconst IconWrapper = styled.div<{\n  isCentre: boolean\n  padding: IconPaddingOptions\n}>((props) => {\n  const { isCentre, padding } = props\n\n  let paddingSize = '0.25rem'\n\n  switch (padding) {\n    case 'none':\n      paddingSize = '0'\n      break\n    case 'small':\n      paddingSize = '0.125rem'\n      break\n  }\n\n  return css`\n    margin-right: ${paddingSize};\n    display: flex;\n    pointer-events: none;\n    align-items: center;\n\n    ${isCentre &&\n    css`\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 50%;\n      transform: translateY(-50%);\n      margin: auto;\n    `}\n\n    path {\n      pointer-events: none;\n      fill: inherit;\n    }\n\n    svg {\n      pointer-events: none;\n      left: 50%;\n      transform: translateX(-50%);\n      position: relative;\n    }\n  `\n})\n\n/*\n * Component\n */\nexport const Icon = (props: Props) => {\n  const {\n    icon = 'ghost',\n    padding = 'none',\n    isCentre = false,\n    prefix = 'fas',\n    size = '1x'\n  } = props\n\n  return (\n    <IconWrapper padding={padding} isCentre={isCentre}>\n      <FontAwesomeIcon\n        size={size}\n        icon={[prefix as IconPrefix, icon as IconName]}\n        fixedWidth={true}\n      />\n    </IconWrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport YouTube from 'react-youtube'\nimport { YouTubePlayer } from 'youtube-player/dist/types'\nimport { Icon } from 'components'\n\ninterface Props {\n  youtubeId: string\n}\n\n/*\n * Styled Components\n */\nconst PlayerWrapper = styled.div((props) => {\n  const {\n    theme: { boxShadow }\n  } = props\n\n  return css`\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    height: 200px;\n    background: #fff;\n    box-shadow: ${boxShadow};\n    display: flex;\n  `\n})\n\nconst ControlWrapper = styled.div``\nconst YoutubeWrapper = styled.div`\n  width: 200px;\n  height: 200px;\n  background: #eee;\n`\n\n/*\n * Component\n */\nexport const Player = (props: Props) => {\n  const { youtubeId } = props\n\n  /*\n   * State\n   */\n  const [player, setPlayer] = useState<YouTubePlayer>()\n\n  /*\n   * Handle Events\n   */\n  const handleReady = (event: { target: YouTubePlayer }) => {\n    const { target } = event\n    setPlayer(target)\n  }\n\n  const handlePlay = () => {\n    player?.playVideo()\n  }\n\n  const handleGetDetails = () => {\n    console.log(player)\n    console.log(player?.getCurrentTime())\n    console.log(player?.getDuration())\n\n    // Current Time = 557.648687\n    // Duration = 11049\n    //19.81\n\n    // Total Page = 130525\n    // ScrollY = 4312\n    // 30\n  }\n\n  return (\n    <PlayerWrapper>\n      <YoutubeWrapper>\n        <YouTube\n          videoId={youtubeId}\n          opts={{\n            height: '200',\n            width: '200',\n            playerVars: {\n              controls: 0,\n              autoplay: 0,\n              playsinline: 1\n            }\n          }}\n          onReady={handleReady}\n        />\n      </YoutubeWrapper>\n      <ControlWrapper>\n        <button onClick={handlePlay}>\n          <Icon icon=\"play\" />\n        </button>\n        <button onClick={handleGetDetails}>Details</button>\n      </ControlWrapper>\n    </PlayerWrapper>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport { Helmet } from 'react-helmet'\nimport { StyledLink } from 'components'\n\ninterface MenuProps {\n  title: string\n  plays: Plays[]\n}\n\ninterface Plays {\n  title: string\n  id: string\n}\n\n/*\n * Styled Components\n */\nconst Partition = styled.span`\n  opacity: 0.5;\n  text-transform: uppercase;\n  font-size: 0.8125rem;\n  display: block;\n  padding: 0.75rem 1rem;\n`\n\nconst ShakespeareImage = styled.img`\n  width: 100%;\n`\n\nconst MenuLinkWrapper = styled.div<{ isActive: boolean }>((props) => {\n  const {\n    isActive,\n    theme: { color, borderColor }\n  } = props\n\n  return css`\n    box-sizing: content-box;\n    position: relative;\n    transition: opacity 0.4s;\n    text-transform: uppercase;\n    font-size: 0.8125rem;\n    padding: 0.75rem 1rem;\n    display: flex;\n    border-bottom: 1px solid transparent;\n\n    :hover {\n      border-bottom: 1px solid ${color};\n    }\n\n    ${isActive &&\n    css`\n      border-bottom: 1px solid ${borderColor};\n    `}\n  `\n})\n\n/*\n * Component\n */\nexport const Menu = () => {\n  const [menuContent, setMenuContent] = useState<\n    Record<string, unknown>\n  >()\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/data/menu.json`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    })\n      .then((response) => response.json())\n      .then((menuContent) => {\n        setMenuContent(menuContent)\n      })\n  }, [])\n\n  const menu =\n    menuContent &&\n    Object.keys(menuContent).map((value) => {\n      const menuItem = menuContent[value] as MenuProps\n\n      return (\n        <div key={`menu-${menuItem.title}`}>\n          <Partition>{menuItem.title}</Partition>\n          {menuItem.plays.map((play) => {\n            const { id, title } = play\n\n            return (\n              <StyledLink\n                key={`menu-project-${id}`}\n                to={`/play/${id}`}\n              >\n                <MenuLinkWrapper isActive={false}>\n                  {title}\n                </MenuLinkWrapper>\n              </StyledLink>\n            )\n          })}\n        </div>\n      )\n    })\n\n  return (\n    <>\n      <Helmet>\n        <title>Menu</title>\n      </Helmet>\n\n      <ShakespeareImage\n        src=\"https://upload.wikimedia.org/wikipedia/commons/3/36/Shakespeare_Droeshout_1623.jpg\"\n        alt=\"\"\n      />\n\n      {menu}\n    </>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport { NavLink } from 'react-router-dom'\nimport { Icon, IconName } from 'components'\n\ninterface Props {\n  to: string\n  children: ReactNode | string\n  asButton?: boolean\n  icon?: IconName\n  isBlock?: boolean\n  onClick?: () => void\n}\n\n/*\n * Styled Components\n */\nconst StyledLinkWrapper = styled((props) => {\n  const linkProps = { ...props }\n\n  delete linkProps.asButton\n  delete linkProps.isBlock\n  delete linkProps.isHoverOpacityDisabled\n\n  return <NavLink {...linkProps} />\n})((props) => {\n  const {\n    theme: {\n      color,\n      gradientToColor,\n      gradientFromColor,\n      boxShadow,\n      borderRadius\n    },\n    asButton,\n    isBlock\n  } = props\n\n  return css`\n    color: ${color};\n    fill: ${color};\n    text-decoration: none;\n    cursor: pointer;\n\n    div {\n      margin-right: 0.5rem;\n    }\n\n    ${asButton &&\n    css`\n      display: flex;\n      color: ${color};\n      background: ${gradientToColor};\n      background-image: linear-gradient(\n        145deg,\n        ${gradientToColor} 0%,\n        ${gradientFromColor} 100%\n      );\n\n      border-radius: ${borderRadius}rem;\n      padding: 0.5rem 1rem;\n      box-shadow: ${boxShadow};\n      justify-content: center;\n      font-size: 0.8125rem;\n      text-transform: uppercase;\n      opacity: 1;\n    `}\n\n    ${isBlock &&\n    css`\n      width: 100%;\n    `}\n  `\n})\n\n/*\n * Component\n */\nexport const StyledLink = (props: Props) => {\n  const {\n    to,\n    children,\n    asButton = false,\n    icon,\n    onClick,\n    isBlock = false\n  } = props\n\n  /*\n   * Event Handlers\n   */\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    onClick && onClick()\n  }\n\n  return (\n    <StyledLinkWrapper\n      to={to}\n      onClick={handleClick}\n      asButton={asButton}\n      isBlock={isBlock}\n    >\n      {icon && <Icon icon={icon} isShadow />}\n      {children}\n    </StyledLinkWrapper>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components/macro'\nimport axios from 'axios'\nimport { useParams } from 'react-router-dom'\nimport { NodeProps, PlayContentProps } from 'types'\nimport { Play, Player, Loading } from 'components'\nimport { xmlParser } from 'utils'\n\ninterface Props {\n  playId: string\n}\n\n/*\n * Styled Components\n */\nconst PlayViewerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`\n\nconst BackgroundImage = styled.img`\n  width: 100%;\n  position: fixed;\n  z-index: -1;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0.1;\n`\n\n/*\n * Component\n */\nexport const PlayViewer = () => {\n  const { playId } = useParams<Props>()\n\n  /*\n   * State\n   */\n  const [play, setPlay] = useState<NodeProps>()\n  const [playContent, setPlayContent] = useState<PlayContentProps>()\n\n  /*\n   * React Hooks\n   */\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/data/${playId}.json`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    })\n      .then((response) => response.json())\n      .then((playContent) => {\n        setPlayContent(playContent)\n      })\n  }, [playId])\n\n  useEffect(() => {\n    if (playContent) {\n      axios\n        .get(`${process.env.PUBLIC_URL}/plays/${playContent.xml}.xml`)\n        .then((response) => {\n          const parser = new DOMParser()\n          const dom = parser.parseFromString(\n            response.data,\n            'application/xml'\n          )\n\n          setPlay(xmlParser({ dom, childNodes: [] }))\n        })\n    }\n  }, [playContent])\n\n  if (!play) return <Loading />\n  if (!play.childNodes) return <>ERROR</>\n\n  return (\n    <PlayViewerWrapper>\n      <BackgroundImage\n        src=\"https://upload.wikimedia.org/wikipedia/commons/3/36/Shakespeare_Droeshout_1623.jpg\"\n        alt=\"\"\n      />\n      <Play\n        nodeName={play.childNodes[0].nodeName}\n        childNodes={play.childNodes[0].childNodes}\n      />\n      {playContent && <Player youtubeId={playContent?.youtube} />}\n    </PlayViewerWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport { Icon } from 'components'\nimport { quillAnimation, lineAnimation } from 'utils'\n\n/*\n * Styled Components\n */\nconst LoadingWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst LoadingText = styled.div((props) => {\n  const {\n    theme: { headerFont }\n  } = props\n\n  return css`\n    font-family: ${headerFont};\n    margin-bottom: 0.5rem;\n  `\n})\n\nconst QuillWrapper = styled.div`\n  transform-origin: 0 100%;\n  animation: ${quillAnimation} infinite 0.8s;\n`\n\nconst LineWrapper = styled.div`\n  width: 65%;\n  height: 1px;\n  background: black;\n  position: relative;\n\n  :after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: #fff;\n    left: 0;\n    top: 0;\n\n    animation: ${lineAnimation} infinite 0.8s;\n  }\n`\n\n/*\n * Component\n */\nexport const Loading = () => {\n  return (\n    <LoadingWrapper>\n      <LoadingText>Loading</LoadingText>\n      <QuillWrapper>\n        <Icon icon=\"feather-alt\" />\n      </QuillWrapper>\n      <LineWrapper />\n    </LoadingWrapper>\n  )\n}\n","import React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components/macro'\nimport { Theme } from 'themes'\nimport { PlayViewer, Menu } from 'components'\n\nimport './index.css'\n\nReactDOM.render(\n  <StrictMode>\n    <ThemeProvider theme={Theme}>\n      <Router>\n        <Switch>\n          <Route path=\"/play/:playId/\">\n            <PlayViewer />\n          </Route>\n          <Route path=\"/\">\n            <Menu />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n","import 'styled-components'\n\ndeclare module 'styled-components' {\n  export interface DefaultTheme {\n    name: string\n\n    // Font\n    headerFont: string\n    copyFont: string\n\n    // Main Colors\n    color: string\n    background: string\n    borderColor: string\n    boxShadow: string\n\n    // Dimensions\n    imageWidth: number\n    menuHeight: number\n    menuWidth: number\n\n    // Polygon\n    Mesh: {\n      width: number\n      height: number\n      sliceRatio: number\n      ambient: string\n      diffuse: string\n    }\n    Lights: {\n      zOffset: number\n      ambient: string\n      spotlights: string[]\n    }\n  }\n}\n\nexport const Theme = {\n  name: 'Theme',\n\n  // Font\n  headerFont: 'bardolatry',\n  copyFont: 'Antonio',\n\n  // Main Colors\n  color: '#212121',\n  background: '#ffffff',\n  borderColor: '#9fcade',\n\n  // Dimensions\n  imageWidth: 224,\n  menuHeight: 60,\n  menuWidth: 18.75,\n\n  boxShadow: '0 0 0.5rem 0 rgba(0, 0, 0, 0.2)',\n\n  // Polygon\n  Mesh: {\n    width: 1.2,\n    height: 1.2,\n    sliceRatio: 0.2,\n    ambient: '#555555',\n    diffuse: '#FFFFFF'\n  },\n  Lights: {\n    zOffset: 100,\n    ambient: '#084abd',\n    spotlights: ['#e7e698', '#e0dc82']\n  }\n}\n"],"sourceRoot":""}